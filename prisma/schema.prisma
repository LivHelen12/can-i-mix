generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Specialist {
  id            Int      @id @default(autoincrement())
  name          String
  email         String   @unique
  password      String
  cpf           String   @unique
  mobile        String
  fieldOfWorkId Int
  educationId   Int
  profession    String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  posts Post[]

  fieldOfWork FieldOfWork @relation(fields: [fieldOfWorkId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  education   Education   @relation(fields: [educationId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model FieldOfWork {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  specialists Specialist[]
}

model Education {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  specialists Specialist[]
}

model Substance {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  firstSubstance  Post[] @relation("FirstSubstance")
  secondSubstance Post[] @relation("SecondSubstance")
}

model Post {
  id                Int      @id @default(autoincrement())
  firstSubstanceId  Int
  secondSubstanceId Int
  recommendedId     Int
  description       String
  content           String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  specialistId      Int

  specialist      Specialist  @relation(fields: [specialistId], references: [id])
  firstSubstance  Substance   @relation("FirstSubstance", fields: [firstSubstanceId], references: [id])
  secondSubstance Substance   @relation("SecondSubstance", fields: [secondSubstanceId], references: [id])
  recommended     Recommended @relation(fields: [recommendedId], references: [id])
}

model Recommended {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts Post[]
}
